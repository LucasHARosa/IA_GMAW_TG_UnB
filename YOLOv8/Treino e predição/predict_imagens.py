# -*- coding: utf-8 -*-
"""

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GOfPHY6ilzsTrs54dJ2glNf1SbB1D3ws
"""

from google.colab import drive
drive.mount('/content/drive')

!nvidia-smi

!pip install ultralytics

from ultralytics import YOL

!yolo task=detect mode=predict model=/content/runs/detect/train/weights/best.pt conf=0.25 source='/content/drive/MyDrive/TCC/Experimento1/Img6.bmp' save=True

from ultralytics import YOLO
model = YOLO('/content/drive/MyDrive/best.pt')
results = model.track(source='/content/drive/MyDrive/TCC/Experimento1/Img6.bmp', conf=0.3, save=True)

from ultralytics import YOLO
model = YOLO('/content/drive/MyDrive/TCC/YOLOResults/best.pt')

import cv2
import os
import numpy as np
from PIL import Image

diretorio = '/content/drive/MyDrive/datasets/Yolo/test/images'


imagens = []

for nome_arquivo in os.listdir(diretorio):
      caminho_arquivo = os.path.join(diretorio, nome_arquivo)
      image = Image.open(caminho_arquivo)
      image = np.array(image)
      imagens.append(image)


ndarray_imagens = np.array(imagens)

import cv2
import os
import numpy as np
from PIL import Image

diretorio = '/content/drive/MyDrive/datasets/Yolo/test/images'


imagens = []
resultado = []

for nome_arquivo in os.listdir(diretorio):
      caminho_arquivo = os.path.join(diretorio, nome_arquivo)
      results = model.predict(source=caminho_arquivo,imgsz=256, conf=0.5, save_txt=True)
      resultado.append(results)

import csv
import os

# Diretório contendo os arquivos .txt
diretorio = '/content/runs/detect/predict/labels'

# Nome do arquivo CSV de saída
nome_arquivo_csv = 'saida.csv'

# Cabeçalho do CSV
cabecalho = ['Arquivo', 'Conteudo']

# Abre o arquivo CSV para escrita
with open(nome_arquivo_csv, 'w', newline='') as csv_file:
    writer = csv.writer(csv_file)
    writer.writerow(cabecalho)  # Escreve o cabeçalho no CSV

    # Percorre o diretório
    for nome_arquivo in os.listdir(diretorio):
        # Verifica se o arquivo é um arquivo .txt
        if nome_arquivo.endswith('.txt'):
            # Lê o conteúdo do arquivo .txt
            caminho_arquivo = os.path.join(diretorio, nome_arquivo)
            with open(caminho_arquivo, 'r') as txt_file:
                conteudo = txt_file.read()

            # Escreve a linha no CSV
            writer.writerow([nome_arquivo, conteudo])

print("Conversão concluída. O arquivo CSV foi gerado com sucesso.")

for r in resultado:
  print(r.)

results = model.predict(source=ndarray_imagens, save_txt=True,imgsz=256, conf=0.5)

# bounding_boxes_xywh= [results.boxes.xywh for result in results]
# print("bouding boxes for image:", bounding_boxes_xywh[0])
print(results)

print(results[0].boxes)